#!/home/s2071275/pythonProjects/env/bin/python

import hyperopt
from hyperopt import fmin,tpe, hp
from hyperopt.mongoexp import MongoTrials
import socket
import numpy as np
import pandas as pd
import sys
import dataExplore2
with open('logs/ip.log', 'r') as f:
    first_line = f.readline()
ip= first_line
#finalFun

db_experiment1 = "final_db"
db_experiment2 = "db_tpe3"
db = "db_tpe7"
key_experiment1 = "rand1"
key_experiment2 = "firstTpe"
key = key_experiment2
trials = MongoTrials('mongo://'+ip+':27017/'+db+'/jobs', exp_key=key)
finished = []
for row in trials.results:
    resultRow = row.to_dict()
    if resultRow['status'] == "ok":
        finished.append(resultRow)


dfF = pd.DataFrame(finished)
measures = ["train_netrmse", "test_rmse","train_rmse", "val_rmse", "train_mape", "val_mape","train_diff","val_diff"]
columns = list(dfF)
for m in measures:
    columns.remove(m)
newAlign = measures+columns
dfF = dfF[newAlign]
dfF = dfF.sort_values(['val_rmse'], ascending=[True])
print str(len(finished))+' results collected'
print dfF
dfF.to_pickle("searchResults.pd")
if len(sys.argv) > 1:
    if sys.argv[1] == "1":
        dataExplore2.showDF(dfF, False)

